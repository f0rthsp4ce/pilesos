<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <title>PiLesos</title>
  <meta name="description" content="" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="" />
  <style>
    #camera {
      width: fit-content;
      height: fit-content;
    }
  </style>
</head>

<body>
  <img id="camera" src="">
  <form id="controls" onmousemove="sendInput();">

  </form>


  <script src="/static/joystick-controller.min.js"></script>
  <script>
    // set camera url
    document.getElementById("camera").src = `http://${window.location.host}:8001/stream`;
  </script>

  <script>
    // connect to websocket
    var ws = new WebSocket(`ws://${window.location.host}/input`);
    // print received websocket messages to console
    ws.onmessage = function (event) {
      console.info(event.data)
    };

    var joystick_state;
    var last_sent_state = ""; // traffic save
    function sendInput() {
      if (ws.CONNECTING) {
        return;
      }
      // to be sent to server
      var inputs_state = {}

      // populate with buttons, sliders, etc
      document.querySelectorAll("#controls > input").forEach((input) => {
        inputs_state[input.name] = input.value;
      });

      // populate with joystick data
      inputs_state["wheels_joystick"] = joystick_state;
      // send inputs
      if (inputs_state != last_sent_state) {
        var json = JSON.stringify(inputs_state);
        ws.send(json);
        last_sent_state = inputs_state;
        console.info(json)
      }
    }

    // create joystick
    JoystickController = JoystickController.default
    const staticJoystick = new JoystickController(
      {
        maxRange: 100,
        level: 10,
        radius: 50,
        joystickRadius: 20,
        opacity: 0.5,
        leftToRight: false,
        bottomToUp: true,
        containerClass: "joystick-container",
        controllerClass: "joystick-controller",
        joystickClass: "joystick",
        distortion: true,
        x: "20%",
        y: "35%",
        mouseClickButton: "ALL",
        hideContextMenu: true,
      },
      (s) => {
        joystick_state = s;
        sendInput();
      }
    );
  </script>

</body>

</html>